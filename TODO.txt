#TODO


* Implement derivatives:
	u^v 
	e^u 		- 	(Need to add support to lexer and tree before adding to diff)

* Add a function for comparing trees to see if they are equal
* Use function (make sure you memoize results) to create a way to simplify 
  redundant expressions like: x + x -> 2x
	
	There could be other ways of doing this but this might be one way. 
* To "Show steps" print out an expression after each call to find_derivative?
  This shouldn't be hard


* Create detailed explanations of code/algorithms, of each step
* Comment more code
* Pick a consistent naming scheme (no caps with underscores or camel case or whatever. PICK ONE)


>>> * Re-factor code doing a bit of this rn: 
        Move recursion debug statements for the Expression/Term/Factor/Primary into a decorator? 


* Better end-user error handling: If they type in an unsupported expression, let them know in a nice way.



DONE:
- Sin, Cos, Tan
- NEGATIVES as input
- Negative numbers? Like with '-cos(x)' Thoughts? Deal with this
